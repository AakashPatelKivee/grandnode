@model ProductOverviewModel
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    string addtowishlistlink = "";
    string quickviewurl = Url.RouteUrl("QuickView-Product", new { productId = Model.Id });

    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (!Model.ShowQty)
    {
        if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
        }
        else
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
        }
        addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    }
    else
    {
        if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
        }
        else
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId });
        }
        addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist });
    }
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

@await Component.InvokeAsync("Widget", new { widgetZone = "productbox_before_content", additionalData = Model })
<template>
    <div class="w-100">
        <b-card no-body tag="article" class="product-box list mb-3">
            <div class="picture-container">
                <b-link href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
                    <b-card-img-lazy alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title"></b-card-img-lazy>
                    @if (!string.IsNullOrEmpty(Model.SecondPictureModel.ImageUrl))
                    {
                        <b-card-img-lazy class="hover-img" alt="@Model.SecondPictureModel.AlternateText" src="@Model.SecondPictureModel.ImageUrl"></b-card-img-lazy>
                    }
                </b-link>
                <b-button title="@T("Products.QuickView")" class="btn btn-secondary quick-view-button" data-toggle="modal" data-target="ModalQuickView" onclick="AjaxCart.quickview_product('@quickviewurl')">
                    <b-icon icon="search"></b-icon>
                    <span>@T("Products.QuickView")</span>
                </b-button>
            </div>
            <b-card-body>
                <h5 class="card-title">
                    @Model.Name
                </h5>
                @if (Model.ShowSku && !string.IsNullOrEmpty(Model.Sku))
                {
                    <span class="sku">@Model.Sku</span>
                }
                <div class="prices-rating">
                    @if (Model.ReviewOverviewModel.AllowCustomerReviews)
                    {
                        decimal ratingValue = 0;
                        if (Model.ReviewOverviewModel.TotalReviews != 0)
                        {
                            ratingValue = Convert.ToDecimal(((Model.ReviewOverviewModel.RatingSum * (double)100) / Model.ReviewOverviewModel.TotalReviews) / (double)100);
                        }
                        <template>
                            <div class="rating">
                                <b-form-rating id="rating-inline" class="p-0" variant="warning" no-border size="sm" show-value precision="2" readonly inline value="@(ratingValue)"></b-form-rating>
                                <span>@Model.ReviewOverviewModel.TotalReviews @T("Reviews.Overview.Reviews")</span>
                            </div>
                        </template>
                    }
                    <div class="prices @if (Model.ProductType == ProductType.Reservation) { <text>reservation-price</text> } ">
                        @if (Model.ProductType != ProductType.Auction)
                        {
                            <div class="actual-price price">
                                @Model.ProductPrice.Price
                            </div>
                        }
                        else
                        {
                            <div class="actual-price price">
                                @(Model.ProductPrice.HighestBidValue > 0 ? Model.ProductPrice.HighestBid : Model.ProductPrice.StartPrice)
                            </div>
                        }
                        @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                        {
                            <div class="old-price price">
                                @Model.ProductPrice.OldPrice
                            </div>
                        }
                    </div>
                </div>
                @if (Model.ProductAttributeModels.Any())
                {
                    <div class="attr-container">
                        <table>
                            <tbody>
                                @foreach (var item in Model.ProductAttributeModels)
                                {
                                    <tr class="attr">
                                        <td>
                                            <div class="attr-name">
                                                @item.Name
                                            </div>
                                        </td>
                                        <td>
                                            <div class="attr-value">
                                                @foreach (var spec in item.Values)
                                                {
                                                    switch (item.AttributeControlType)
                                                    {
                                                        case AttributeControlType.DropdownList:
                                                        case AttributeControlType.RadioList:
                                                        case AttributeControlType.Checkboxes:
                                                        case AttributeControlType.ReadonlyCheckboxes:
                                                            <b-button variant="light" size="sm" class="name" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })?@item.Name=@Html.Raw(spec.Name)">
                                                                @Html.Raw(spec.Name)
                                                            </b-button>
                                                            break;
                                                        case AttributeControlType.ColorSquares:
                                                            <b-button variant="light" size="sm" class="name color-container" title="@spec.Name" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })?@item.Name=@Html.Raw(spec.Name)">
                                                                <span class="color" style="background-color:@spec.ColorSquaresRgb;">&nbsp;</span>
                                                            </b-button>
                                                            break;
                                                        case AttributeControlType.ImageSquares:
                                                            <b-button variant="light" size="sm" class="name image-container" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })?@item.Name=@Html.Raw(spec.Name)">
                                                                <img src="@spec.ImageSquaresPictureModel?.ImageUrl" />
                                                            </b-button>
                                                            break;
                                                        default:
                                                            break;
                                                    }
                                                }
                                            </div>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                <div class="desc">
                    @Html.Raw(Model.ShortDescription)
                </div>
                <b-button-group>
                    @if (!Model.ProductPrice.DisableWishlistButton && Model.ProductType == ProductType.SimpleProduct)
                    {
                        <b-button data-toggle="title" title="@T("ShoppingCart.AddToWishlist")" class="btn btn-secondary" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink', '@Model.ShowQty', '@Model.Id');return false;">
                            <b-icon icon="heart"></b-icon>
                            <span class="sr-only">AddToWishlist</span>
                        </b-button>
                    }
                    @if (!Model.ProductPrice.DisableBuyButton)
                    {
                        var addToCartText = T("ShoppingCart.AddToCart").Text;
                        if (Model.ProductType == ProductType.Reservation)
                        {
                            addToCartText = T("ShoppingCart.Reservation").Text;
                        }
                        if (Model.ProductPrice.AvailableForPreOrder)
                        {
                            addToCartText = T("ShoppingCart.PreOrder").Text;
                        }
                        <b-button variant="info" class="justify-content-center w-100" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink', '@Model.ShowQty', '@Model.Id');return false;">
                            <span class="add-cart-text">@(addToCartText)</span>
                            <span class="sr-only">AddToCart</span>
                        </b-button>
                    }
                    else
                    {
                        if (Model.ProductType == ProductType.Auction)
                        {
                            var addToCartText = T("ShoppingCart.Bids").Text;
                            <b-button variant="info" class="justify-content-center w-100" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink', 'false', '@Model.Id');return false;">
                                <span class="add-cart-text">@(addToCartText)</span>
                                <span class="sr-only">AddToCart</span>
                            </b-button>
                        }
                    }
                    @if (!Model.ProductPrice.DisableAddToCompareListButton && Model.ProductType == ProductType.SimpleProduct)
                    {
                        <b-button data-tooltip="title" title="@T("ShoppingCart.AddToCompareList")" class="btn btn-secondary" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;">
                            <span class="sr-only">AddToCompareList</span>
                            <b-icon icon="shuffle"></b-icon>
                        </b-button>
                    }
                </b-button-group>
            </b-card-body>
        </b-card>
    </div>
</template>